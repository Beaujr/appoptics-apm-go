// +build dont_compile_me

// The program is used to generate the code to initialize AppOptics version,
// commit id and other metadata.
package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"os/exec"

	"github.com/pkg/errors"
)

const template = `// Code generated by go generate. DO NOT EDIT.

package utils

func init() {
	version = %[1]q
	commit = %[2]q
	goVersion = runtime.Version()
}
`

func cmd(cmd string, arg ...string) string {
	out, err := exec.Command(cmd, arg...).Output()
	if err != nil {
		return "unknown"
	}
	return string(bytes.TrimSpace(out))
}

func genCode(version string, commit string) []byte {
	return []byte(fmt.Sprintf(template, version, commit))
}

func main() {
	version := cmd("git", "describe", "--abbrev=0", "--tags")
	commit := cmd("git", "rev-parse", "--short", "HEAD")

	err := ioutil.WriteFile("version_init.go", genCode(version, commit), 0664)
	if err != nil {
		err = errors.Wrap(err, "AppOptics codegen")
		panic(err)
	}
}
